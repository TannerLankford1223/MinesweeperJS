{"ast":null,"code":"function revealCells(arr, x, y, emptySpacesLeft) {\n  let cellsToReveal = [];\n  cellsToReveal.push(arr[x][y]);\n\n  while (cellsToReveal.length !== 0) {\n    let cell = cellsToReveal.pop();\n    let i = cell.x;\n    let j = cell.y;\n\n    if (!cell.fired) {\n      emptySpacesLeft--;\n      cell.fired = true;\n    }\n\n    if (cell.value !== 0) {\n      break;\n    } // Iterate over cells and add to array of cells to reveal\n\n\n    if (i > 0 && j > 0 && arr[i - 1][j - 1].value === 0 && !arr[i - 1][j - 1].fired) {\n      cellsToReveal.push(arr[i - 1][j - 1]);\n    }\n\n    if (i < arr.length - 1 && j < arr[0].length - 1 && arr[i + 1][j + 1].value === 0 && !arr[i + 1][j + 1].fired) {\n      cellsToReveal.push(arr[i + 1][j + 1]);\n    }\n\n    if (i > 0 && j < arr[0].length - 1 && arr[i - 1][j + 1].value === 0 && !arr[i - 1][j + 1].fired) {\n      cellsToReveal.push(arr[i - 1][j + 1]);\n    }\n\n    if (i < arr.length - 1 && j > 0 && arr[i + 1][j - 1].value === 0 && !arr[i + 1][j - 1].fired) {\n      cellsToReveal.push(arr[i + 1][j - 1]);\n    }\n\n    if (i > 0 && arr[i - 1][j].value === 0 && !arr[i - 1][j].fired) {\n      cellsToReveal.push(arr[i - 1][j]);\n    }\n\n    if (j < arr[0].length - 1 && arr[i][j + 1].value === 0 && !arr[i][j + 1].fired) {\n      cellsToReveal.push(arr[i][j + 1]);\n    }\n\n    if (i < arr.length - 1 && arr[i + 1][j].value === 0 && !arr[i + 1][j].fired) {\n      cellsToReveal.push(arr[i + 1][j]);\n    }\n\n    if (j > 0 && arr[i][j - 1].value === 0 && !arr[i][j - 1].fired) {\n      cellsToReveal.push(arr[i][j - 1]);\n    } // Iterate over cells and reveal\n\n\n    if (i > 0 && j > 0 && !arr[i - 1][j - 1].fired) {\n      arr[i - 1][j - 1].fired = true;\n      emptySpacesLeft--;\n    }\n\n    if (j > 0 && !arr[i][j - 1].fired) {\n      arr[i][j - 1].fired = true;\n      emptySpacesLeft--;\n    }\n\n    if (i < arr.length - 1 && j > 0 && !arr[i + 1][j - 1].fired) {\n      arr[i + 1][j - 1].fired = true;\n      emptySpacesLeft--;\n    }\n\n    if (i > 0 && !arr[i - 1][j].fired) {\n      arr[i - 1][j].fired = true;\n      emptySpacesLeft--;\n    }\n\n    if (i < arr.length - 1 && !arr[i + 1][j].fired) {\n      arr[i + 1][j].fired = true;\n      emptySpacesLeft--;\n    }\n\n    if (i > 0 && j < arr[0].length - 1 && !arr[i - 1][j + 1].fired) {\n      arr[i - 1][j + 1].fired = true;\n      emptySpacesLeft--;\n    }\n\n    if (j < arr[0].length - 1 && !arr[i][j + 1].fired) {\n      arr[i][j + 1].fired = true;\n      emptySpacesLeft--;\n    }\n\n    if (i < arr.length - 1 && j < arr[0].length - 1 && !arr[i + 1][j + 1].fired) {\n      arr[i + 1][j + 1].fired = true;\n      emptySpacesLeft--;\n    }\n  }\n\n  return {\n    arr,\n    emptySpacesLeft\n  };\n}\n\nexport default revealCells;","map":{"version":3,"names":["revealCells","arr","x","y","emptySpacesLeft","cellsToReveal","push","length","cell","pop","i","j","fired","value"],"sources":["/Users/tannerlankford/repos/MinesweeperJS/src/utils/RevealCells.js"],"sourcesContent":["function revealCells(arr, x, y, emptySpacesLeft) {\n\n    let cellsToReveal = [];\n    cellsToReveal.push(arr[x][y]);\n\n    while (cellsToReveal.length !== 0) {\n        let cell = cellsToReveal.pop();\n        let i = cell.x;\n        let j = cell.y;\n\n        if (!cell.fired) {\n            emptySpacesLeft--;\n            cell.fired = true;\n        }\n        if (cell.value !== 0) {\n            break;\n        }\n        // Iterate over cells and add to array of cells to reveal\n        if (i > 0 && j > 0 && arr[i - 1][j - 1].value === 0 && !arr[i - 1][j - 1].fired) {\n            cellsToReveal.push(arr[i - 1][j - 1]);\n        }\n\n        if (i < arr.length - 1 && j < arr[0].length - 1 && arr[i + 1][j + 1].value === 0 && !arr[i + 1][j + 1].fired) {\n            cellsToReveal.push(arr[i + 1][j + 1]);\n        }\n        if (i > 0 && j < arr[0].length - 1 && arr[i - 1][j + 1].value === 0 && !arr[i - 1][j + 1].fired) {\n            cellsToReveal.push(arr[i - 1][j + 1]);\n        }\n\n        if (i < arr.length - 1 && j > 0 && arr[i + 1][j - 1].value === 0 && !arr[i + 1][j - 1].fired) {\n            cellsToReveal.push(arr[i + 1][j - 1]);\n        }\n\n        if (i > 0 && arr[i - 1][j].value === 0 && !arr[i - 1][j].fired) {\n            cellsToReveal.push(arr[i - 1][j]);\n        }\n\n        if (j < arr[0].length - 1 && arr[i][j + 1].value === 0 && !arr[i][j + 1].fired) {\n            cellsToReveal.push(arr[i][j + 1]);\n        }\n\n        if (i < arr.length - 1 && arr[i + 1][j].value === 0 && !arr[i + 1][j].fired) {\n            cellsToReveal.push(arr[i + 1][j]);\n        }\n\n        if (j > 0 && arr[i][j - 1].value === 0 && !arr[i][j - 1].fired) {\n            cellsToReveal.push(arr[i][j - 1]);\n        }\n\n        // Iterate over cells and reveal\n        if (i > 0 && j > 0 && !arr[i - 1][j - 1].fired) {\n            arr[i - 1][j - 1].fired = true;\n            emptySpacesLeft--;\n        }\n\n        if (j > 0 && !arr[i][j - 1].fired) {\n            arr[i][j - 1].fired = true;\n            emptySpacesLeft--;\n        }\n\n        if (i < arr.length - 1 && j > 0 && !arr[i + 1][j - 1].fired) {\n            arr[i + 1][j - 1].fired = true;\n            emptySpacesLeft--;\n        }\n\n        if (i > 0 && !arr[i - 1][j].fired) {\n            arr[i - 1][j].fired = true;\n            emptySpacesLeft--;\n        }\n\n        if (i < arr.length - 1 && !arr[i + 1][j].fired) {\n            arr[i + 1][j].fired = true;\n            emptySpacesLeft--;\n        }\n\n        if (i > 0 && j < arr[0].length - 1 && !arr[i - 1][j + 1].fired) {\n            arr[i - 1][j + 1].fired = true;\n            emptySpacesLeft--;\n        }\n\n        if (j < arr[0].length - 1 && !arr[i][j + 1].fired) {\n            arr[i][j + 1].fired = true;\n            emptySpacesLeft--;\n        }\n\n        if (i < arr.length - 1 && j < arr[0].length - 1 && !arr[i + 1][j + 1].fired) {\n            arr[i + 1][j + 1].fired = true;\n            emptySpacesLeft--;\n\n        }\n    }\n\n    return { arr, emptySpacesLeft };\n}\n\nexport default revealCells;"],"mappings":"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"},"metadata":{},"sourceType":"module"}